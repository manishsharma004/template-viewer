{"version":3,"file":"static/js/962.d9fe2e13.chunk.js","mappings":"sKA4BA,MAEA,EAFmB,IAzBnB,MAAwCA,WAAAA,GAAA,KACpCC,SAAW,GAAG,KACdC,QAAU,GAAG,KACbC,QAAUC,IAAAA,OAAmB,CAC7BC,MAAAA,CAAOC,EAAwBC,GAG3B,OAFiBH,IAAAA,QAAmBE,EAE7BE,CAASD,EACpB,CACAE,UAAAA,CAAWC,EAAcF,GACrBJ,IAAAA,gBAA2BM,EAAMF,GACjCG,KAAKV,SAASW,KAAKF,EACvB,CACAG,YAAAA,GACI,OAAOC,OAAOC,OAAOJ,KAAKV,SAC9B,CACAe,SAAAA,CAAUN,EAAcO,GACpBb,IAAAA,eAA0BM,EAAMO,GAChCN,KAAKT,QAAQU,KAAKF,EACtB,CACAQ,WAAAA,GACI,OAAOJ,OAAOC,OAAOJ,KAAKT,QAC9B,E","sources":["utils/handlebars.ts"],"sourcesContent":["import Handlebars, { HelperDelegate } from \"handlebars\";\nimport { ITemplating } from \"../types\";\n\nclass Templating implements ITemplating {\n    partials = [];\n    helpers = [];\n    compile = Handlebars.compile;\n    render(templateString: string, context: object) {\n        const template = Handlebars.compile(templateString);\n\n        return template(context);\n    }\n    addPartial(name: string, template: string | HandlebarsTemplateDelegate) {\n        Handlebars.registerPartial(name, template);\n        this.partials.push(name);\n    }\n    listPartials() {\n        return Object.freeze(this.partials);\n    }\n    addHelper(name: string, helperFn: HelperDelegate) {\n        Handlebars.registerHelper(name, helperFn);\n        this.helpers.push(name);\n    }\n    listHelpers() {\n        return Object.freeze(this.helpers);\n    }\n}\n\nconst templating = new Templating();\n\nexport default templating;\n"],"names":["constructor","partials","helpers","compile","Handlebars","render","templateString","context","template","addPartial","name","this","push","listPartials","Object","freeze","addHelper","helperFn","listHelpers"],"sourceRoot":""}